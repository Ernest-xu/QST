<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Ernest.Dao.saFunctionDaoI">
	<resultMap type="Ernest.Entity.SaFunction" id="saFunctionMap">
		<id column="sid" jdbcType="VARCHAR" property="sid"/>
		<result column="sname" jdbcType="VARCHAR" property="sname"/>
		<result column="surl" jdbcType="VARCHAR" property="surl"/>
		<result column="isShow" jdbcType="SMALLINT" property="isShow"/>
		<result column="roleId" jdbcType="VARCHAR" property="roleId"/>
		<result column="sicon" jdbcType="VARCHAR" property="sicon"/>
		<result column="companyId" jdbcType="VARCHAR" property="companyId"/>
		<result column="sorder" jdbcType="INTEGER" property="sorder"/>
		<result column="stype" jdbcType="VARCHAR" property="stype"/>
	</resultMap>
	
	<select id="">
	
	</select>
	
	<insert id="save" parameterType="Ernest.Entity.SaFunction">
		insert into sa_function 
			<trim prefix="(" suffix=")" suffixOverrides=",">
				<if test="sid != null">
					 sid,
				</if>
				<if test="sname != null">
					 sname,
				</if>
				<if test="surl != null">
					 surl,
				</if>
				<if test="isShow != null">
					 isShow,
				</if>
				<if test="roleId != null">
					 roleId,
				</if>
				<if test="sicon != null">
					 sicon,
				</if>
				<if test="companyId != null">
					 companyId,
				</if>
				<if test="sorder != null">
					 sorder,
				</if>
				<if test="stype != null">
					 stype,
				</if>
			</trim>
			<trim prefix=" values (" suffix=")" suffixOverrides=",">
				<if test="sid != null">
					 #{sid,jdbcType=VARCHAR},
				</if>
				<if test="sname != null">
					#{sname,jdbcType=VARCHAR},
				</if>
				<if test="surl != null">
					 #{surl,jdbcType=VARCHAR},
				</if>
				<if test="isShow != null">
					#{isShow,jdbcType=SMALLINT},
				</if>
				<if test="roleId != null">
					 #{roleId,jdbcType=VARCHAR},
				</if>
				<if test="sicon != null">
					 #{sicon,jdbcType=VARCHAR},
				</if>
				<if test="companyId != null">
					 #{companyId,jdbcType=VARCHAR},
				</if>
				<if test="sorder != null">
					#{sorder,jdbcType=INTEGER},
				</if>
				<if test="stype != null">
					 #{stype,jdbcType=VARCHAR},
				</if>
			</trim>
	</insert>
	
	<update id="updateById" parameterType="Ernest.Entity.SaFunction">
		update sa_function 
			<trim prefix="set" suffixOverrides=",">
				
				<if test="sname != null">
					 sname=#{sname,jdbcType=VARCHAR},
				</if>
				<if test="surl != null">
					 surl=#{surl,jdbcType=VARCHAR},
				</if>
				<if test="isShow != null">
					 isShow=#{isShow,jdbcType=SMALLINT},
				</if>
				<if test="roleId != null">
					 roleId=#{roleId,jdbcType=VARCHAR},
				</if>
				<if test="sicon != null">
					 sicon=#{sicon,jdbcType=VARCHAR},
				</if>
				<if test="companyId != null">
					 companyId=#{companyId,jdbcType=VARCHAR},
				</if>
				<if test="sorder != null">
					 sorder=#{sorder,jdbcType=INTEGER},
				</if>
				<if test="stype != null">
					 stype=#{stype,jdbcType=VARCHAR},
				</if>
			</trim>
		where 
			sid=#{sid,jdbcType=VARCHAR}
	</update>
	<insert id="batchSaves" parameterType="java.util.List">
 		insert into sa_function  (sID,sName,sUrl,isShow,roleId,sIcon,companyId,sOrder,sType )values 
		<foreach collection="list" item="item" index="index" separator=",">
			<!-- 保证与实体类的字段一致，以对象的关系定义（注：区分大小写） -->
 			(#{item.sid,jdbcType=VARCHAR},#{item.sname,jdbcType=VARCHAR},
			#{item.surl,jdbcType=VARCHAR},#{item.isShow,jdbcType=SMALLINT},#{item.roleId,jdbcType=VARCHAR},
			#{item.sicon,jdbcType=VARCHAR},#{item.companyId,jdbcType=VARCHAR},
			#{item.sorder,jdbcType=INTEGER},#{item.stype,jdbcType=VARCHAR}) 
		</foreach>
	</insert>
	<delete id="deleteByRoleId" parameterType="String">
		Delete From sa_function where roleId =#{id}
	</delete>
	
	<delete id="deleteByRoleIds" parameterType="java.util.List">
	DELETE FROM  sa_function where roleId in 
	<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
	#{item}
	</foreach>
	</delete>
	
</mapper>